name: Build Sudokura v1
on:
  workflow_dispatch:
  push:
    tags:
      - 'v1.*'

jobs:
  linux-appimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev pkg-config wget imagemagick fuse

      - name: Build linux binary
        run: |
          set -euo pipefail
          gcc -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1 \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm

      - name: Prepare AppDir (+ desktop + icon)
        run: |
          set -euo pipefail
          mkdir -p AppDir/usr/bin
          cp Sudokura-v1 AppDir/usr/bin/
          chmod +x AppDir/usr/bin/Sudokura-v1

          cat > AppDir/sudokura.desktop <<'EOF'
          [Desktop Entry]
          Type=Application
          Name=Sudokura v1
          Exec=Sudokura-v1
          Icon=sudokura
          Categories=Game;
          EOF

          convert -size 256x256 xc:'#3B4A7A' AppDir/sudokura.png

      - name: Deploy runtime to AppDir (linuxdeploy)
        run: |
          set -euo pipefail
          wget -O linuxdeploy.AppImage \
            https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy.AppImage

          ./linuxdeploy.AppImage --appdir AppDir \
            --executable AppDir/usr/bin/Sudokura-v1 \
            --desktop-file AppDir/sudokura.desktop \
            --icon-file AppDir/sudokura.png

      - name: Create AppImage (appimagetool)
        run: |
          set -euo pipefail
          wget -O appimagetool.AppImage \
            https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool.AppImage
          ARCH=x86_64 ./appimagetool.AppImage AppDir Sudokura-v1-x86_64.AppImage
          ls -lh Sudokura-v1-x86_64.AppImage
          file Sudokura-v1-x86_64.AppImage

      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-x86_64.AppImage
          path: Sudokura-v1-x86_64.AppImage

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - run: brew install sdl2 sdl2_ttf pkg-config
      - run: |
          set -euo pipefail
          clang -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1 \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm
          zip -9r Sudokura-v1-macos.zip Sudokura-v1
      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-macos.zip
          path: Sudokura-v1-macos.zip

  windows-msys2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_ttf
            mingw-w64-x86_64-ntldd-git
            zip

      - name: Build EXE (static libstdc++/libgcc)
        shell: msys2 {0}
        run: |
          set -euo pipefail
          gcc -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1.exe \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm \
            -static-libstdc++ -static-libgcc

      - name: Bundle runtime, fonts and zip
        shell: msys2 {0}
        run: |
          set -euo pipefail
          DIST=dist
          mkdir -p "$DIST/fonts"
          cp -f Sudokura-v1.exe "$DIST/"

          # Prefijo MINGW actual (ej. /mingw64)
          RTBIN="$MINGW_PREFIX/bin"

          # 1) DLLs principales
          for f in SDL2.dll SDL2_ttf.dll; do
            [ -f "$RTBIN/$f" ] && cp -n "$RTBIN/$f" "$DIST/" || true
          done

          # 2) Resolver deps (incluye "not found" -> buscar por nombre en $RTBIN)
          ntldd -R "$DIST/Sudokura-v1.exe" "$DIST/SDL2.dll" "$DIST/SDL2_ttf.dll" \
            | sed -e 's/\r$//' \
            | awk '/=>/ { if ($3 == "not") print $1; else print $3 }' \
            > deps_all.txt || true

          echo "Deps report (resolved or names):"
          cat deps_all.txt || true

          while IFS= read -r item; do
            src=""
            if [ -f "$item" ]; then
              src="$item"
            else
              name="$item"
              # Algunos ntldd imprimen "libX.dll" cuando no resuelven la ruta
              if [ -f "$RTBIN/$name" ]; then src="$RTBIN/$name"; fi
            fi

            # Excluir DLLs del sistema Windows
            case "$src" in
              /c/WINDOWS/*|/c/Windows/*|/c/windows/*) continue ;;
            esac

            if [ -n "${src:-}" ] && [ -f "$src" ]; then
              cp -n "$src" "$DIST/" || true
            fi
          done < deps_all.txt

          # 3) Fuente fallback para tu buscador local (fonts/DejaVuSans.ttf)
          # (DejaVu 2.37, fuente ampliamente usada y libre)
          if [ ! -f "$DIST/fonts/DejaVuSans.ttf" ]; then
            curl -L -o "$DIST/fonts/DejaVuSans.ttf" \
              "https://downloads.sourceforge.net/project/dejavu/dejavu/2.37/dejavu-sans-ttf-2.37.zip"
            # Extraer solo el TTF que nos interesa
            python - <<'PY'
import zipfile, sys, os
z="dist/fonts/DejaVuSans.ttf".replace("DejaVuSans.ttf","dejavu-sans-ttf-2.37.zip")
with zipfile.ZipFile(z) as f:
    for n in f.namelist():
        if n.endswith("DejaVuSans.ttf"):
            f.extract(n, "dist/fonts_tmp")
            src=os.path.join("dist/fonts_tmp",n)
            os.replace(src, "dist/fonts/DejaVuSans.ttf")
            break
os.remove(z)
PY
          fi

          # 4) strip para reducir tamaÃ±o
          strip -s "$DIST"/{*.dll,Sudokura-v1.exe} 2>/dev/null || true

          echo "Contenido final de $DIST:"
          ls -la "$DIST"

          # 5) Empaquetar (una sola vez, sin zip dentro de zip)
          (cd "$DIST" && zip -9r ../Sudokura-v1-windows.zip .)

      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-windows.zip
          path: Sudokura-v1-windows.zip
