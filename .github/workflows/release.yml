name: Build Sudokura v1
on:
  workflow_dispatch:
  push:
    tags:
      - 'v1.*'

jobs:
  linux-appimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev pkg-config wget imagemagick

      - name: Build linux binary
        run: |
          set -euo pipefail
          gcc -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1 \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm

      - name: Prepare AppDir (+ desktop + icon)
        run: |
          set -euo pipefail
          mkdir -p AppDir/usr/bin
          cp Sudokura-v1 AppDir/usr/bin/
          chmod +x AppDir/usr/bin/Sudokura-v1

          # .desktop (Icon=sudokura)
          cat > AppDir/sudokura.desktop <<'EOF'
          [Desktop Entry]
          Type=Application
          Name=Sudokura v1
          Exec=Sudokura-v1
          Icon=sudokura
          Categories=Game;
          EOF

          # Crear un PNG vÃ¡lido (256x256) con ImageMagick
          convert -size 256x256 xc:'#3B4A7A' AppDir/sudokura.png

      - name: Build AppImage
        run: |
          set -euo pipefail
          wget -O linuxdeploy.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy.AppImage

          ./linuxdeploy.AppImage \
            --appdir AppDir \
            --executable AppDir/usr/bin/Sudokura-v1 \
            --desktop-file AppDir/sudokura.desktop \
            --icon-file AppDir/sudokura.png \
            --output appimage

          mv *.AppImage Sudokura-v1-x86_64.AppImage

      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-x86_64.AppImage
          path: Sudokura-v1-x86_64.AppImage

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - run: brew install sdl2 sdl2_ttf pkg-config
      - run: |
          set -euo pipefail
          clang -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1 \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm
          zip -9r Sudokura-v1-macos.zip Sudokura-v1
      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-macos.zip
          path: Sudokura-v1-macos.zip

  windows-msys2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_ttf
            mingw-w64-x86_64-ntldd-git
            zip

      - name: Build EXE
        shell: msys2 {0}
        run: |
          set -euo pipefail
          gcc -std=c11 -O2 -Wall -Wextra sudokura_sdl.c -o Sudokura-v1.exe \
            $(pkg-config --cflags --libs sdl2 SDL2_ttf) -lm

      - name: Bundle DLLs and zip
        shell: msys2 {0}
        run: |
          set -euo pipefail
          ntldd -R Sudokura-v1.exe | awk '/=>/ {print $3}' | grep -E '^/' | sort -u > dlls.txt || true
          if [ -s dlls.txt ]; then
            while IFS= read -r f; do
              [ -f "$f" ] && cp "$f" .
            done < dlls.txt
          fi
          if ls *.dll >/dev/null 2>&1; then
            zip -9r Sudokura-v1-windows.zip Sudokura-v1.exe *.dll
          else
            zip -9r Sudokura-v1-windows.zip Sudokura-v1.exe
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: Sudokura-v1-windows.zip
          path: Sudokura-v1-windows.zip
